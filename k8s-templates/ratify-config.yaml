apiVersion: v1
kind: ConfigMap
metadata:
  name: ratify-config
  namespace: default
data:
  config.json: |
    {
        "executor": {
        },
        "store": {
            "version": "1.0.0",
            "plugins": [
                {
                    "name": "oras"
                }
            ]
        },
        "policy": {
            "version": "1.0.0",
            "plugin": {
                "name": "regoPolicy",
                "policyPath": "/root/.ratify/policy.rego"
            }
        },
        "verifier": {
            "version": "1.0.0",
            "plugins": [
                {
                    "name": "notation",
                    "artifactTypes": "application/vnd.cncf.notary.signature",
                    "verificationCerts": [
                        "/root/.ratify/certs"
                    ],
                    "trustPolicyDoc": {
                        "version": "1.0",
                        "trustPolicies": [
                            {
                                "name": "default",
                                "registryScopes": [
                                    "*"
                                ],
                                "signatureVerification": {
                                    "level": "strict"
                                },
                                "trustStores": [
                                    "ca:certs"
                                ],
                                "trustedIdentities": [
                                    "*"
                                ]
                            }
                        ]
                    }
                }
            ]
        }
    }
  notation-test.crt: |
    -----BEGIN CERTIFICATE-----
    MIICLTCCAdOgAwIBAgIUAxxDIBY+iExNa9dmS9oZa4YndO8wCgYIKoZIzj0EAwIw
    eDEtMCsGA1UEAwwkMmJjZDY0NGEtOGEzZS00MDExLWI3OTktOTAyZjFmMGEwMTRi
    MRIwEAYDVQQHDAlDYW1icmlkZ2UxFzAVBgNVBAgMDkNhbWJyaWRnZXNoaXJlMQ0w
    CwYDVQQKDARUZXN0MQswCQYDVQQGEwJHQjAeFw0yNDA3MjMxMDIyNTdaFw0yNDA4
    MDIxMDIyNTdaMHgxLTArBgNVBAMMJDJiY2Q2NDRhLThhM2UtNDAxMS1iNzk5LTkw
    MmYxZjBhMDE0YjESMBAGA1UEBwwJQ2FtYnJpZGdlMRcwFQYDVQQIDA5DYW1icmlk
    Z2VzaGlyZTENMAsGA1UECgwEVGVzdDELMAkGA1UEBhMCR0IwWTATBgcqhkjOPQIB
    BggqhkjOPQMBBwNCAAQD4LfLoN6wUqFRqWopTKjddZfmT5rU4CYi3v5BxWAbtOJK
    F+xTuqPsDmWK3T2Lns4j2rLpu2GuTwsEHV2NkPrrozswOTAOBgNVHQ8BAf8EBAMC
    AgQwDwYDVR0TAQH/BAUwAwEB/zAWBgNVHSUBAf8EDDAKBggrBgEFBQcDAzAKBggq
    hkjOPQQDAgNIADBFAiA+g6yBh+ejVDxTWTyNgVIv8RY5ukdmwPjVFs9HFcRZZgIh
    APGqOfiUrYZRagTb8poB32Ie6kou2ttN+p7DQ+yzkVei
    -----END CERTIFICATE-----
  policy.rego: |
    package ratify.policy
    default valid := false

    valid {
        not failed_verify(input)
    }

    failed_verify(reports) {
        [path, value] := walk(reports)
        value == false
        path[count(path) - 1] == "isSuccess"
    }

    failed_verify(reports) {
        [path, value] := walk(reports)
        path[count(path) - 1] == "verifierReports"
        count(value) == 0
    }